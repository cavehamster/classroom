
Step3.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00800100  00800100  000001c8  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000174  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .comment      00000030  00000000  00000000  000001c8  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  000001f8  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 00000020  00000000  00000000  00000238  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   0000089b  00000000  00000000  00000258  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 0000067e  00000000  00000000  00000af3  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   00000324  00000000  00000000  00001171  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000024  00000000  00000000  00001498  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    000003b5  00000000  00000000  000014bc  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    000002d0  00000000  00000000  00001871  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000010  00000000  00000000  00001b41  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 34 00 	jmp	0x68	; 0x68 <__ctors_end>
   4:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
   8:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
   c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  10:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  14:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  18:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  1c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  20:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  24:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  28:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  2c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  30:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  34:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  38:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  3c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  40:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  44:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  48:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  4c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  50:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  54:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  58:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  5c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  60:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  64:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>

00000068 <__ctors_end>:
  68:	11 24       	eor	r1, r1
  6a:	1f be       	out	0x3f, r1	; 63
  6c:	cf ef       	ldi	r28, 0xFF	; 255
  6e:	d8 e0       	ldi	r29, 0x08	; 8
  70:	de bf       	out	0x3e, r29	; 62
  72:	cd bf       	out	0x3d, r28	; 61
  74:	0e 94 40 00 	call	0x80	; 0x80 <main>
  78:	0c 94 b8 00 	jmp	0x170	; 0x170 <_exit>

0000007c <__bad_interrupt>:
  7c:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000080 <main>:
#define DELAY	100

int main(void){
	
	int currentLED = 0;
	DDRB = 0x3F;						// Data direction register for Port B - pins 0-5 set to output
  80:	8f e3       	ldi	r24, 0x3F	; 63
  82:	84 b9       	out	0x04, r24	; 4
	PORTB = 0x3F;						// Set pins 0-5 to high
  84:	85 b9       	out	0x05, r24	; 5

#define DELAY	100

int main(void){
	
	int currentLED = 0;
  86:	80 e0       	ldi	r24, 0x00	; 0
  88:	90 e0       	ldi	r25, 0x00	; 0
			case 2:
				C_CLEARBIT(LOWER_LEFT_YELLOW);
				_delay_ms(DELAY);
				C_SETBIT(LOWER_LEFT_YELLOW);
				_delay_ms(DELAY);
				currentLED = 3;
  8a:	f3 e0       	ldi	r31, 0x03	; 3
  8c:	e0 e0       	ldi	r30, 0x00	; 0
			case 3:
				C_CLEARBIT(LOWER_RIGHT_YELLOW);
				_delay_ms(DELAY);
				C_SETBIT(LOWER_RIGHT_YELLOW);
				_delay_ms(DELAY);
				currentLED = 0;
  8e:	70 e0       	ldi	r23, 0x00	; 0
  90:	60 e0       	ldi	r22, 0x00	; 0
			case 0:
				C_CLEARBIT(UPPER_RIGHT_YELLOW);
				_delay_ms(DELAY);
				C_SETBIT(UPPER_RIGHT_YELLOW);
				_delay_ms(DELAY);
				currentLED = 1;
  92:	51 e0       	ldi	r21, 0x01	; 1
  94:	40 e0       	ldi	r20, 0x00	; 0
			case 1:
				C_CLEARBIT(UPPER_LEFT_YELLOW);
				_delay_ms(DELAY);
				C_SETBIT(UPPER_LEFT_YELLOW);
				_delay_ms(DELAY);
				currentLED = 2;
  96:	32 e0       	ldi	r19, 0x02	; 2
  98:	20 e0       	ldi	r18, 0x00	; 0
	DDRB = 0x3F;						// Data direction register for Port B - pins 0-5 set to output
	PORTB = 0x3F;						// Set pins 0-5 to high
	
    while(1){							// Forever and ever and ever and ...
	
		switch(currentLED){
  9a:	81 30       	cpi	r24, 0x01	; 1
  9c:	91 05       	cpc	r25, r1
  9e:	19 f1       	breq	.+70     	; 0xe6 <main+0x66>
  a0:	1c f4       	brge	.+6      	; 0xa8 <main+0x28>
  a2:	00 97       	sbiw	r24, 0x00	; 0
  a4:	49 f0       	breq	.+18     	; 0xb8 <main+0x38>
  a6:	f9 cf       	rjmp	.-14     	; 0x9a <main+0x1a>
  a8:	82 30       	cpi	r24, 0x02	; 2
  aa:	91 05       	cpc	r25, r1
  ac:	99 f1       	breq	.+102    	; 0x114 <main+0x94>
  ae:	83 30       	cpi	r24, 0x03	; 3
  b0:	91 05       	cpc	r25, r1
  b2:	09 f4       	brne	.+2      	; 0xb6 <main+0x36>
  b4:	46 c0       	rjmp	.+140    	; 0x142 <main+0xc2>
  b6:	f1 cf       	rjmp	.-30     	; 0x9a <main+0x1a>
			case 0:
				C_CLEARBIT(UPPER_RIGHT_YELLOW);
  b8:	2d 98       	cbi	0x05, 5	; 5
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
  ba:	8f ef       	ldi	r24, 0xFF	; 255
  bc:	91 ee       	ldi	r25, 0xE1	; 225
  be:	a4 e0       	ldi	r26, 0x04	; 4
  c0:	81 50       	subi	r24, 0x01	; 1
  c2:	90 40       	sbci	r25, 0x00	; 0
  c4:	a0 40       	sbci	r26, 0x00	; 0
  c6:	e1 f7       	brne	.-8      	; 0xc0 <main+0x40>
  c8:	00 c0       	rjmp	.+0      	; 0xca <main+0x4a>
  ca:	00 00       	nop
				_delay_ms(DELAY);
				C_SETBIT(UPPER_RIGHT_YELLOW);
  cc:	2d 9a       	sbi	0x05, 5	; 5
  ce:	8f ef       	ldi	r24, 0xFF	; 255
  d0:	91 ee       	ldi	r25, 0xE1	; 225
  d2:	a4 e0       	ldi	r26, 0x04	; 4
  d4:	81 50       	subi	r24, 0x01	; 1
  d6:	90 40       	sbci	r25, 0x00	; 0
  d8:	a0 40       	sbci	r26, 0x00	; 0
  da:	e1 f7       	brne	.-8      	; 0xd4 <main+0x54>
  dc:	00 c0       	rjmp	.+0      	; 0xde <main+0x5e>
  de:	00 00       	nop
				_delay_ms(DELAY);
				currentLED = 1;
  e0:	85 2f       	mov	r24, r21
  e2:	94 2f       	mov	r25, r20
				break;
  e4:	da cf       	rjmp	.-76     	; 0x9a <main+0x1a>
			case 1:
				C_CLEARBIT(UPPER_LEFT_YELLOW);
  e6:	2c 98       	cbi	0x05, 4	; 5
  e8:	8f ef       	ldi	r24, 0xFF	; 255
  ea:	91 ee       	ldi	r25, 0xE1	; 225
  ec:	a4 e0       	ldi	r26, 0x04	; 4
  ee:	81 50       	subi	r24, 0x01	; 1
  f0:	90 40       	sbci	r25, 0x00	; 0
  f2:	a0 40       	sbci	r26, 0x00	; 0
  f4:	e1 f7       	brne	.-8      	; 0xee <main+0x6e>
  f6:	00 c0       	rjmp	.+0      	; 0xf8 <main+0x78>
  f8:	00 00       	nop
				_delay_ms(DELAY);
				C_SETBIT(UPPER_LEFT_YELLOW);
  fa:	2c 9a       	sbi	0x05, 4	; 5
  fc:	8f ef       	ldi	r24, 0xFF	; 255
  fe:	91 ee       	ldi	r25, 0xE1	; 225
 100:	a4 e0       	ldi	r26, 0x04	; 4
 102:	81 50       	subi	r24, 0x01	; 1
 104:	90 40       	sbci	r25, 0x00	; 0
 106:	a0 40       	sbci	r26, 0x00	; 0
 108:	e1 f7       	brne	.-8      	; 0x102 <main+0x82>
 10a:	00 c0       	rjmp	.+0      	; 0x10c <main+0x8c>
 10c:	00 00       	nop
				_delay_ms(DELAY);
				currentLED = 2;
 10e:	83 2f       	mov	r24, r19
 110:	92 2f       	mov	r25, r18
				break;
 112:	c3 cf       	rjmp	.-122    	; 0x9a <main+0x1a>
			case 2:
				C_CLEARBIT(LOWER_LEFT_YELLOW);
 114:	2a 98       	cbi	0x05, 2	; 5
 116:	8f ef       	ldi	r24, 0xFF	; 255
 118:	91 ee       	ldi	r25, 0xE1	; 225
 11a:	a4 e0       	ldi	r26, 0x04	; 4
 11c:	81 50       	subi	r24, 0x01	; 1
 11e:	90 40       	sbci	r25, 0x00	; 0
 120:	a0 40       	sbci	r26, 0x00	; 0
 122:	e1 f7       	brne	.-8      	; 0x11c <main+0x9c>
 124:	00 c0       	rjmp	.+0      	; 0x126 <main+0xa6>
 126:	00 00       	nop
				_delay_ms(DELAY);
				C_SETBIT(LOWER_LEFT_YELLOW);
 128:	2a 9a       	sbi	0x05, 2	; 5
 12a:	8f ef       	ldi	r24, 0xFF	; 255
 12c:	91 ee       	ldi	r25, 0xE1	; 225
 12e:	a4 e0       	ldi	r26, 0x04	; 4
 130:	81 50       	subi	r24, 0x01	; 1
 132:	90 40       	sbci	r25, 0x00	; 0
 134:	a0 40       	sbci	r26, 0x00	; 0
 136:	e1 f7       	brne	.-8      	; 0x130 <main+0xb0>
 138:	00 c0       	rjmp	.+0      	; 0x13a <main+0xba>
 13a:	00 00       	nop
				_delay_ms(DELAY);
				currentLED = 3;
 13c:	8f 2f       	mov	r24, r31
 13e:	9e 2f       	mov	r25, r30
				break;
 140:	ac cf       	rjmp	.-168    	; 0x9a <main+0x1a>
			case 3:
				C_CLEARBIT(LOWER_RIGHT_YELLOW);
 142:	2b 98       	cbi	0x05, 3	; 5
 144:	8f ef       	ldi	r24, 0xFF	; 255
 146:	91 ee       	ldi	r25, 0xE1	; 225
 148:	a4 e0       	ldi	r26, 0x04	; 4
 14a:	81 50       	subi	r24, 0x01	; 1
 14c:	90 40       	sbci	r25, 0x00	; 0
 14e:	a0 40       	sbci	r26, 0x00	; 0
 150:	e1 f7       	brne	.-8      	; 0x14a <main+0xca>
 152:	00 c0       	rjmp	.+0      	; 0x154 <main+0xd4>
 154:	00 00       	nop
				_delay_ms(DELAY);
				C_SETBIT(LOWER_RIGHT_YELLOW);
 156:	2b 9a       	sbi	0x05, 3	; 5
 158:	8f ef       	ldi	r24, 0xFF	; 255
 15a:	91 ee       	ldi	r25, 0xE1	; 225
 15c:	a4 e0       	ldi	r26, 0x04	; 4
 15e:	81 50       	subi	r24, 0x01	; 1
 160:	90 40       	sbci	r25, 0x00	; 0
 162:	a0 40       	sbci	r26, 0x00	; 0
 164:	e1 f7       	brne	.-8      	; 0x15e <main+0xde>
 166:	00 c0       	rjmp	.+0      	; 0x168 <main+0xe8>
 168:	00 00       	nop
				_delay_ms(DELAY);
				currentLED = 0;
 16a:	87 2f       	mov	r24, r23
 16c:	96 2f       	mov	r25, r22
				break;
 16e:	95 cf       	rjmp	.-214    	; 0x9a <main+0x1a>

00000170 <_exit>:
 170:	f8 94       	cli

00000172 <__stop_program>:
 172:	ff cf       	rjmp	.-2      	; 0x172 <__stop_program>
